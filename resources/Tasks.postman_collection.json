{
	"info": {
		"_postman_id": "d8626c40-a6db-45ee-9cd9-db9fb46389dc",
		"name": "Tasks",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"david@tobon.com\",\n    \"password\": \"secret\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/api/login",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Task",
			"item": [
				{
					"name": "Get Tasks",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AUTH_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/task",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"task"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Task Detail",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AUTH_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/task/detail/10",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"task",
								"detail",
								"10"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User Tasks",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AUTH_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/task/mytasks",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"task",
								"mytasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Task",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AUTH_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"My first Task\",\n    \"description\": \"Description of my first task\",\n    \"type\": \"User Story\",\n    \"priority\": 1,\n    \"assignee\": \"david@tobon.com\",\n    \"status\": \"IN_PROGRESS\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/api/task/create",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"task",
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Task",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AUTH_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 3,\n    \"title\": \"My second Task\",\n    \"description\": \"Description of my second task\",\n    \"type\": \"User Story\",\n    \"priority\": 3,\n    \"assignee\": \"david@tobon.com\",\n    \"status\": \"TO_DO\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/api/task/update",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"task",
								"update"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Task",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{AUTH_TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 44\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/api/task/delete",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"task",
								"delete"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const loginUrl = `${pm.environment.get('BASE_URL')}${pm.environment.get('LOGIN_URL')}`;",
					"",
					"const requestObject = {",
					"    url: loginUrl,",
					"    method: 'POST',",
					"    header: {",
					"        'content-type': 'application/json'",
					"    },",
					"    body: {",
					"        mode: 'application/json',",
					"        raw: JSON.stringify(",
					"            {",
					"                \"username\": pm.environment.get('USERNAME'),",
					"                \"password\": pm.environment.get('PASSWORD')",
					"            }",
					"        )",
					"    }",
					"};",
					"",
					"const requestCallback = (error, response) => {",
					"    if (!error) {",
					"        console.log('Saving auth token');",
					"        const responseJson = response.json();",
					"        pm.environment.set('AUTH_TOKEN', responseJson.token);",
					"    } else {",
					"        console.log('Request error: ', error);",
					"    }",
					"}",
					"",
					"pm.sendRequest(requestObject, requestCallback);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}